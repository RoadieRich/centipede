<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
  <head>
    <title>Action Arguments - Centipede Tutorial</title>
    <link rel="stylesheet" type="text/css" href="style2.css"/>
  </head>
  <body>
    <h1 style="counter-reset: h1 2;">Arguments</h1>
    <p>
      Most actions have one or more arguments, an argument is a piece of data provided as input to that action.
    </p>
    <p>
      The arguments of each action are displayed in the action editor panel, the action editor can be toggled between 
      expanded state, which shows the arguments, or collapsed state, which hides the arguments. 
    </p>
    <p>
      In addition to the arguments, each action has a space for a helpful comment, which is visible even when the 
      action is collapsed.
    </p>

    <h2 id="literal_vs_interpolated">Literal vs Interpolated</h2>
    <p>
      Some arguments can accept expressions, if an argument accepts expressions it is identified by a yellow tint to 
      the background. Literal arguments do not accept expressions, these have a white background.
    </p>
    <p>
      Centipede scans action arguments for expressions, and the expression is replaced with its result, so that
      it is possible to construct the inputs to an action using the results from another, through Centipede variables
    </p>
    <p>
      Expressions are enclosed by curly braces, and can be inserted within text, for example:
    </p>
      <ul>
        <li>
          <tt>Five times nine is {5 * 9}</tt>
        </li>
        <li>
          <tt>millimetreValue = {inchValue * 25.4}</tt>
        </li>
      </ul>
    <p>
      Expressions may include Centipede variable names and valid math functions expressed using Python notation. 
    </p>
    <h2 id="exercise">Exercise: Hello World Message Box</h2>
    <p>
      This exercise builds on the following topics, covered in the tutorial so far:
    </p>
    <ul>
      <li>
        Adding Actions
      </li>
      <li>
        Arguments
      </li>
    </ul>
    <p>
      The exercise demonstrates how to ask for user input, and then uses that input in another action.
    </p>
    <h3>Instructions</h3>
    <ol>
      <li>
        Start a new Centipede job, and select the <i>User Interface</i> tab of the action toolbox.
      </li>
      <li>
        Drag the action <i>Ask for Input (Text or Numeric)</i> into the action edtor panel above, or double click it.
      </li>
      <li>
        Expand the action by clicking on the '+' button.
        <ul>
          <li>
            Type <tt>What is your name?</tt> into the <i>Title</i> argument.
          </li>
          <li>
            Leave the default text <tt>Please enter the following values</tt> in the <i>Prompt</i> argument.
          </li>
          <li>
            Type <ss>Name:Your name</ss> into the <i>Variables</i> argument.
          </li>
        </ul>
      </li>
      <li>
        Add the<i>Show message box</i> action under the <i>Ask for Input</i> action.
      </li>
      <li>
        Expand the action and set the following arguments:
        <ul>
          <li>
            <i>Message</i> = <tt>Hello {Name}</tt>
          </li>
        </ul>
      </li>
      <li>
        Finally, click the <i>Run</i> button, or choose <i>Run</i> from the Centipede menu bar to run the job.
      </li>
    </ol>
    <p>
      Centipede should prompt you to enter your name, and whatever value you enter appears in the next action.
    </p>
    <p>
      In the output window, inspect the messages and the Variables tabs to understand what happened.
    </p>
    <p>
      Now run it again, and try entering a math expression like <tt>2 + 2</tt> as your name.
    </p>
    <p>
      Next, change the <i>Evaluate user input</i> argument so that it is checked, and run the job again with a math expression.
    </p>
    <p>
      Inspect the output window and variables tab, and notice the different behaviour.
    </p>
  </body>
</html>